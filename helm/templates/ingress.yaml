{{- if .Values.ingress.enabled }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.deploy.svc.name }}-ingress
  namespace: {{ .Values.deploy.namespace }}
  annotations:
    nginx.org/proxy-connect-timeout: "2h"
    nginx.org/proxy-read-timeout: "2h"
    "helm.sh/resource-policy": keep
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "web-session-cookie"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "510"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "510"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "510"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/session-cookie-hash: sha
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header HTTP_CLUSTER_HTTPS "on";
      proxy_set_header X-Forwarded-Proto https;
      real_ip_header X-Forwarded-For;
      set_real_ip_from 0.0.0.0/0;
      real_ip_recursive on;
spec:
  rules:
  - host: {{ .Values.ingress.hosts }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Values.deploy.svc.name }}-service
          servicePort: 80
{{- end }}

